<Project Sdk="Microsoft.NET.Sdk">
   
    <PropertyGroup>
        <TargetFrameworks>netstandard2.1</TargetFrameworks>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        
        <Hour>$([System.DateTime]::UtcNow.Hour)</Hour>
        <Minute>$([System.DateTime]::UtcNow.Minute)</Minute>
        <Second>$([System.DateTime]::UtcNow.Second)</Second>
        <HourTimes1000>$([MSBuild]::Multiply($(Hour), 1000))</HourTimes1000>
        <MinutesAsSeconds>$([MSBuild]::Multiply($(Minute), 60))</MinutesAsSeconds>
        <HoursAndMinutes>$([MSBuild]::Add($(HourTimes1000), $(MinutesAsSeconds)))</HoursAndMinutes>
        <HoursAndMinutesAndSeconds>$([MSBuild]::Add($(HoursAndMinutes), $(Second)))</HoursAndMinutesAndSeconds>
        <YearAndDayOfYear>$([System.DateTime]::UtcNow.ToString(yy))$([System.DateTime]::UtcNow.DayOfYear)</YearAndDayOfYear>
        
        <Build>$([System.DateTime]::op_Subtraction($([System.DateTime]::get_Now().get_Date()),$([System.DateTime]::new(2000,1,1))).get_TotalDays())</Build>
        <Revision>$([MSBuild]::Divide($([System.DateTime]::get_Now().get_TimeOfDay().get_TotalSeconds()), 2).ToString('F0'))</Revision>
        <Version>0.6.$(YearAndDayOfYear).$(Revision)</Version>
        
        <Authors>NetFoundry</Authors>
        <Company>NetFoundry</Company>
        <Description>A .NET standard library which wraps the C SDK and is consumable from .NET</Description>
        <Copyright>© 2019 NetFoundry, Inc. All rights reserved.</Copyright>
        <PackageLicenseFile>2019_NF TCL EULA.txt</PackageLicenseFile>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageProjectUrl>https://openziti.github.io/</PackageProjectUrl>
        <RepositoryUrl>https://github.com/openziti/ziti-sdk-csharp</RepositoryUrl>
        <RootNamespace>OpenZiti</RootNamespace>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="System.Memory" Version="4.5.3" />
    </ItemGroup>

    <ItemGroup>
        <!--Condition="'$(IsPublicBuild)' == 'True'"-->

        <Content Include="./../ZitiNativeApiForDotnetCore/build/x86/Release/ziti4dotnet.dll" Link="runtimes/win-x86/native/ziti4dotnet.dll">
            <PackagePath>runtimes/win-x86/native</PackagePath>
        </Content>
        <Content Include="./../ZitiNativeApiForDotnetCore/build/x64/Release/ziti4dotnet.dll" Link="runtimes/win-x64/native/ziti4dotnet.dll">
            <PackagePath>runtimes/win-x64/native</PackagePath>
        </Content>
        <Content Include="./../ZitiNativeApiForDotnetCore/build/x64/Release/ziti4dotnet.dll" Link="runtimes/win/native/ziti4dotnet.dll">
            <PackagePath>runtimes/win/native</PackagePath>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <None Include="2019_NF TCL EULA.txt">
            <Pack>True</Pack>
            <PackagePath></PackagePath>
        </None>
    </ItemGroup>

    <Target Name="LocalPush" AfterTargets="GenerateNuspec">
        <Message Text="Push NuGet Package to NuGet Feed $(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg" Importance="high"/>
        <Exec Command="nuget add $(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg -Source c:\work\nuget-local"></Exec>
    </Target>
</Project>